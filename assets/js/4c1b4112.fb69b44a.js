"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5549],{758:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Modules/lumiknob","title":"Lumiknob Module","description":"This document describes the functionality and application of the Module Potentiometer Interface designed for SPI-controlled sequential LED activation using the MAX7219. The module enables the sequential control of 32 LEDs via a potentiometer, which modulates the illumination speed.","source":"@site/docs/Modules/lumiknob.md","sourceDirName":"Modules","slug":"/Modules/lumiknob","permalink":"/wiki_uelectronics/docs/Modules/lumiknob","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Modules/lumiknob.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Unit QWIIC BUS Module","permalink":"/wiki_uelectronics/docs/Modules/qwiic_bus"},"next":{"title":"unit_proto_power_delivery_decoy_ch224k","permalink":"/wiki_uelectronics/docs/Modules/proto_power_delivery_decoy"}}');var o=t(4848),r=t(8453);const s={},l="Lumiknob Module",d={},a=[{value:"Overview",id:"overview",level:2},{value:"Hardware Interface",id:"hardware-interface",level:2},{value:"Tested Hardware",id:"tested-hardware",level:2},{value:"Example Code",id:"example-code",level:2},{value:"Performance Outcome",id:"performance-outcome",level:2},{value:"License",id:"license",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"lumiknob-module",children:"Lumiknob Module"})}),"\n",(0,o.jsx)(n.p,{children:"This document describes the functionality and application of the Module Potentiometer Interface designed for SPI-controlled sequential LED activation using the MAX7219. The module enables the sequential control of 32 LEDs via a potentiometer, which modulates the illumination speed."}),"\n",(0,o.jsx)("p",{align:"center",children:(0,o.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_lumiknob_module/refs/heads/main/hardware/resources/lumiknob.png",alt:"Lumiknob Module",width:"500"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The module employs the SPI protocol for communication with the MAX7219 LED driver. A potentiometer is used to adjust the speed at which the LED sequence is activated. Appropriate connections should be made between the potentiometer, MAX7219, and the respective microcontroller pins."}),"\n",(0,o.jsx)(n.h2,{id:"hardware-interface",children:"Hardware Interface"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Potentiometer: Connect to an analog input of the microcontroller."}),"\n",(0,o.jsx)(n.li,{children:"MAX7219: Connect to the designated SPI pins (MOSI, SCK, and Chip Select) of the microcontroller."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Ensure that the project directory includes the necessary files, such as ",(0,o.jsx)(n.code,{children:"max7219.py"})," and ",(0,o.jsx)(n.code,{children:"main.py"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"tested-hardware",children:"Tested Hardware"}),"\n",(0,o.jsx)(n.p,{children:"The table below enumerates the microcontroller boards that have been verified with this module:"}),"\n",(0,o.jsx)("p",{align:"center",children:(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Board"}),(0,o.jsx)(n.th,{children:"Status"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Arduino Uno"}),(0,o.jsx)(n.td,{children:"Not Tested"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Raspberry Pi Pico"}),(0,o.jsx)(n.td,{children:"Not Tested"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"ESP32C3 SuperMini"}),(0,o.jsx)(n.td,{children:"Tested and Functional"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Pulsar C6"}),(0,o.jsx)(n.td,{children:"Tested and Functional"})]})]})]})}),"\n",(0,o.jsx)(n.h2,{id:"example-code",children:"Example Code"}),"\n",(0,o.jsx)(n.p,{children:"Below is an example demonstrating the use of the module with an ESP32C3 SuperMini board:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import max7219\nfrom machine import Pin, SPI, ADC\nimport time\n\nspi = SPI(1, baudrate=10000000, polarity=1, phase=0, sck=Pin(4), mosi=Pin(6))\ncs = Pin(7, Pin.OUT)\ndisplay = max7219.Matrix8x8(spi, cs, 1)\n\ndisplay.brightness(10)\n\npot = ADC(Pin(0))\npot.atten(ADC.ATTN_11DB)\n\ndisplay.fill(0)\ndisplay.show()\n\nwhile True:\n    pot_value = pot.read()\n    num_leds = int((pot_value / 4095) * 32)\n\n    display.fill(0)\n    led_count = 0\n    for row in range(8):\n        for col in range(8):\n            if led_count < num_leds:\n                display.pixel(col, row, 1)\n                led_count += 1\n            else:\n                break\n\n    display.show()\n    time.sleep(0.1)\n"})}),"\n",(0,o.jsx)(n.p,{children:"The sample code retrieves the value from the potentiometer and calculates the corresponding number of LEDs that need to be lit. The LED activation is performed in a sequential manner, progressing row by row from left to right."}),"\n",(0,o.jsx)(n.h2,{id:"performance-outcome",children:"Performance Outcome"}),"\n",(0,o.jsx)(n.p,{children:"The provided GIF demonstrates that the module functions as expected. The potentiometer effectively regulates the sequential activation rate of 32 LEDs, ensuring smooth operation across the display."}),"\n",(0,o.jsx)("p",{align:"center",children:(0,o.jsx)("img",{src:"https://github.com/UNIT-Electronics-MX/unit_lumiknob_module/blob/main/hardware/resources/resized_output.gif?raw=true",alt:"Sequential LED Demonstration",width:"500"})}),"\n",(0,o.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,o.jsx)(n.p,{children:"The module is subject to the applicable open-source license terms."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);