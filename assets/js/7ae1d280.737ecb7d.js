"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9871],{610:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Development_boards/touchdot","title":"Touchdot S3","description":"Leveraging the ESP32-S3 chip, the Touchdot S3 is a versatile development board crafted for creative wearables, IoT implementations, and smart devices. Inspired by the Lilypad aesthetic but delivering modern functionality, it marries a compact form factor with robust connectivity and power management features for seamless prototyping.","source":"@site/docs/Development_boards/touchdot.md","sourceDirName":"Development_boards","slug":"/Development_boards/touchdot","permalink":"/wiki_uelectronics/docs/Development_boards/touchdot","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Development_boards/touchdot.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Cocket Nova","permalink":"/wiki_uelectronics/docs/Development_boards/devlab/cocket_nova"},"next":{"title":"UNIT - Modules","permalink":"/wiki_uelectronics/docs/category/unit---modules"}}');var r=t(4848),s=t(8453);const o={sidebar_position:4},d="Touchdot S3",l={},c=[{value:"Additional Resources",id:"additional-resources",level:3},{value:"Microcontroller: ESP32-S3 Mini",id:"microcontroller-esp32-s3-mini",level:3},{value:"Power Supply &amp; Battery Management",id:"power-supply--battery-management",level:3},{value:"Pinout",id:"pinout",level:2},{value:"GPIOs",id:"gpios",level:3},{value:"Key Features",id:"key-features",level:3},{value:"Example Code",id:"example-code",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"touchdot-s3",children:"Touchdot S3"})}),"\n",(0,r.jsx)(n.p,{children:"Leveraging the ESP32-S3 chip, the Touchdot S3 is a versatile development board crafted for creative wearables, IoT implementations, and smart devices. Inspired by the Lilypad aesthetic but delivering modern functionality, it marries a compact form factor with robust connectivity and power management features for seamless prototyping."}),"\n",(0,r.jsxs)("div",{align:"center",children:[(0,r.jsx)("a",{href:"https://github.com/UNIT-Electronics-MX/unit_touchdot_s3/blob/main/docs/unit_touchdot_s3_product_brief.pdf",target:"_blank",children:(0,r.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_touchdot_s3/refs/heads/main/hardware/resources/unit_top_V_0_1_2_ue0072_Touch-Dot-S3.png",width:"450px",alt:"UNIT Touchdot S3"})}),(0,r.jsx)("p",{children:"UNIT Touchdot S3"})]}),"\n",(0,r.jsx)(n.h3,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,r.jsx)("div",{className:"table-center",children:(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Resource"}),(0,r.jsx)(n.th,{children:"Link"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Wiki-UNIT Electronics"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://unit-electronics-mx.github.io/wiki_uelectronics/docs/Development_boards/touchdot",children:"Wiki-Uelectronics"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"GitHub Repository"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/UNIT-Electronics-MX/unit_touchdot_s3",children:"GitHub Repository"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Product Brief"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/UNIT-Electronics-MX/unit_touchdot_s3/blob/main/docs/unit_touchdot_s3_product_brief.pdf",children:"Product Brief"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Schematic"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/UNIT-Electronics-MX/unit_touchdot_s3/blob/main/hardware/unit_sch_V_0_1_2_ue0072_touch_dot_s3.pdf",children:"Schematic"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Documentation"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://unit-electronics-mx.github.io/unit_touchdot_s3/",children:"Documentation"})})]})]})]})}),"\n",(0,r.jsx)(n.h3,{id:"microcontroller-esp32-s3-mini",children:"Microcontroller: ESP32-S3 Mini"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Energy Efficient:"})," Optimized for low power consumption."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"3.3 V Power Rail:"})," Compatible with wearable sensors and peripherals like QWIIC modules."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wi-Fi and Bluetooth 5:"})," Supports 2.4 GHz Wi-Fi (802.11 b/g/n) with 40 MHz of bandwidth and Bluetooth Low Energy subsystem"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CPU:"})," Xtensa\xae dual-core 32-bit LX7 microprocessor"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory:"})," 384 KB Rom, 512 KB SRAM, and 16 KB SRAM in RTC"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"power-supply--battery-management",children:"Power Supply & Battery Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"USB-C Charging & Communication:"})," Ensures reliable power delivery and straightforward programming."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integrated LiPo Battery Management:"})," Streamlines power safety and efficiency without extra circuitry."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Distributed Power Pads:"})," Magnetic connectors deliver ",(0,r.jsx)(n.strong,{children:"GND"})," and ",(0,r.jsx)(n.strong,{children:"3.3 V"})," for simple, reliable wiring to sensors and actuators."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"pinout",children:"Pinout"}),"\n",(0,r.jsxs)("div",{align:"center",children:[(0,r.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_touchdot_s3/refs/heads/main/hardware/resources/unit_pinout_v_0_1_3_ue0072_touch_dot_s3_en.png",width:"450px",alt:"UNIT Touchdot S3"}),(0,r.jsx)("p",{children:"UNIT Touchdot S3"})]}),"\n",(0,r.jsx)(n.h3,{id:"gpios",children:"GPIOs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sewable Pads:"})," 16 sewable pads in total: 11 programmable multiplexed GPIOs, 1 for Neopixel output data, and 4 for power supply."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pin Headers:"})," 18 pin headers complement the sewable pads; use these to access more GPIOs and functions such as boot or enable."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Wi-Fi & Bluetooth LE"})}),(0,r.jsx)(n.td,{children:"Dual wireless connectivity for seamless IoT and mobile interactions."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Built-in LiPo Charging"})}),(0,r.jsx)(n.td,{children:"Reliable battery charging integrated into the board design."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Power & Reset Controls"})}),(0,r.jsx)(n.td,{children:"Direct access to board power management with dedicated buttons for power and reset."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Sewable Pads & Magnetic Connectors"})}),(0,r.jsx)(n.td,{children:"Ideal for wearable projects and rapid prototyping with flexible module integration."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Multiple Solder Points for GND & 3.3 V"})}),(0,r.jsx)(n.td,{children:"Facilitates easy wiring to external sensors or actuators without complex setup."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Standard QWIIC Connector"})}),(0,r.jsx)(n.td,{children:"Supports quick connection of I\xb2C peripherals such as sensors, displays, and expansion modules."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Power On Switch"})}),(0,r.jsx)(n.td,{children:"Easily turn on the device with an SPST switch."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Built-In LED"})}),(0,r.jsx)(n.td,{children:"LED connected to D13."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"RGB LED"})}),(0,r.jsx)(n.td,{children:"Neopixel 2020 LED, data input connected to D25 and data output to a sewable pad."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Micro SD Slot"})}),(0,r.jsx)(n.td,{children:"Manage data on Micro SD cards with the SPI protocol."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"example-code",children:"Example Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'```c\n#include <Wire.h>\n#include <Adafruit_NeoPixel.h>\n#include <Adafruit_GFX.h>\n#include <Adafruit_SSD1306.h>\n\n#define SCREEN_WIDTH 128\n#define SCREEN_HEIGHT 64\n#define OLED_RESET    -1\n#define SDA_PIN        5\n#define SCL_PIN        6\n#define PIN_LED       45\n#define NUM_LEDS       1\n#define BUTTON_PIN     0\n\nTwoWire i2c_oled(1);\nAdafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &i2c_oled, OLED_RESET);\nAdafruit_NeoPixel strip(NUM_LEDS, PIN_LED, NEO_GRB + NEO_KHZ800);\n\nuint32_t colors[] = {\n  strip.Color(128, 0, 0),\n  strip.Color(0, 128, 0),\n  strip.Color(0, 0, 128),\n  strip.Color(128, 128, 0),\n  strip.Color(0, 128, 128),\n  strip.Color(128, 0, 128),\n  strip.Color(128, 128, 128),\n  strip.Color(64, 64, 0),\n  strip.Color(0, 64, 64),\n  strip.Color(64, 0, 64),\n  strip.Color(0, 0, 0)\n};\n\nconst char* colorNames[] = {\n  "Red", "Green", "Blue", "Yellow", "Cyan", "Magenta", "Gray", "Ochre", "Turquoise", "Purple", "Off"\n};\n\nint colorIndex = 0;\nbool lastButtonState = HIGH;\nunsigned long lastPressTime = 0;\nbool autoMode = false;\nbool colorLocked = false;\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n\n  strip.begin();\n  strip.show();\n\n  i2c_oled.begin(SDA_PIN, SCL_PIN);\n  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);\n  display.clearDisplay();\n  display.setTextSize(1);\n  display.setTextColor(SSD1306_WHITE);\n  display.setCursor((SCREEN_WIDTH - 72) / 2, (SCREEN_HEIGHT - 8) / 2);\n  display.println(" NeoDemo");\n  display.display();\n\n  for (int i = 0; i < 128; i += 8) {\n    strip.setPixelColor(0, strip.Color(i, 0, 128 - i));\n    strip.show();\n    delay(20);\n  }\n\n  delay(1500);\n  display.clearDisplay();\n  lastPressTime = millis();\n}\n\nvoid loop() {\n  bool currentButton = digitalRead(BUTTON_PIN);\n\n  if (!autoMode && lastButtonState == HIGH && currentButton == LOW) {\n    lastPressTime = millis();\n    colorIndex = (colorIndex + 1) % (sizeof(colors) / sizeof(colors[0]));\n    updateDisplay();\n    strip.setPixelColor(0, colors[colorIndex]);\n    strip.show();\n    colorLocked = true;\n  }\n\n  if (!autoMode && !colorLocked && millis() - lastPressTime > 3000) {\n    autoMode = true;\n    display.clearDisplay();\n    display.setCursor(10, 20);\n    display.setTextSize(1);\n    display.println("AUTO mode activated");\n    display.display();\n  }\n\n  if (autoMode) {\n    uint8_t r = random(0, 129);\n    uint8_t g = random(0, 129);\n    uint8_t b = random(0, 129);\n    strip.setPixelColor(0, strip.Color(r, g, b));\n    strip.show();\n    delay(100);\n  }\n\n  lastButtonState = currentButton;\n  delay(50);\n}\n\nvoid updateDisplay() {\n  display.clearDisplay();\n  display.setTextSize(1);\n  display.setCursor(0, 0);\n  display.println("Selected color:");\n  display.setTextSize(2);\n  display.setCursor(5, 25);\n  display.println(colorNames[colorIndex]);\n  display.display();\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);