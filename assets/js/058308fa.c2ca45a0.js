"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3454],{8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>o});var i=n(6540);const s={},l=i.createContext(s);function t(e){const r=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:r},e.children)}},8949:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Development_boards/devlab/multiprotocol","title":"Multi-Protocol Programmer","description":"Users must load specific firmware according to their needs.","source":"@site/docs/Development_boards/devlab/multiprotocol.md","sourceDirName":"Development_boards/devlab","slug":"/Development_boards/devlab/multiprotocol","permalink":"/wiki_uelectronics/docs/Development_boards/devlab/multiprotocol","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Development_boards/devlab/multiprotocol.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"DevLab development boards","permalink":"/wiki_uelectronics/docs/category/devlab-development-boards"},"next":{"title":"Cocket Nova","permalink":"/wiki_uelectronics/docs/Development_boards/devlab/cocket_nova"}}');var s=n(4848),l=n(8453);const t={sidebar_position:1},o="Multi-Protocol Programmer",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Key Features",id:"key-features",level:3},{value:"Resources and Documentation",id:"resources-and-documentation",level:2},{value:"Technical Specifications",id:"technical-specifications",level:2},{value:"Base Hardware",id:"base-hardware",level:3},{value:"Supported Protocols",id:"supported-protocols",level:3},{value:"Available Firmware Profiles",id:"available-firmware-profiles",level:2},{value:"1. \ud83d\udd27 AVR Programmer Firmware",id:"1--avr-programmer-firmware",level:3},{value:"Features:",id:"features",level:4},{value:"Compatible tools:",id:"compatible-tools",level:4},{value:"Compilation:",id:"compilation",level:4},{value:"2. \ud83d\udee1\ufe0f ARM Debugger Firmware (CMSIS-DAP)",id:"2-\ufe0f-arm-debugger-firmware-cmsis-dap",level:3},{value:"Features:",id:"features-1",level:4},{value:"Compatible tools:",id:"compatible-tools-1",level:4},{value:"Drivers:",id:"drivers",level:4},{value:"3. \u2699\ufe0f CPLD Programmer Firmware",id:"3-\ufe0f-cpld-programmer-firmware",level:3},{value:"Features:",id:"features-2",level:4},{value:"Configuration options:",id:"configuration-options",level:4},{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"System Requirements",id:"system-requirements",level:3},{value:"Required software:",id:"required-software",level:4},{value:"For Windows:",id:"for-windows",level:4},{value:"Firmware Flashing Process",id:"firmware-flashing-process",level:3},{value:"1. Enter Bootloader Mode",id:"1-enter-bootloader-mode",level:4},{value:"2. Flash the Firmware",id:"2-flash-the-firmware",level:4},{value:"3. Verify Installation",id:"3-verify-installation",level:4},{value:"Permission Setup (Linux)",id:"permission-setup-linux",level:3},{value:"Firmware Compatibility Table",id:"firmware-compatibility-table",level:2},{value:"Common Troubleshooting",id:"common-troubleshooting",level:2},{value:"\u274c Device not recognized",id:"-device-not-recognized",level:3},{value:"\u274c Programming error",id:"-programming-error",level:3},{value:"\u274c Slow programming speed",id:"-slow-programming-speed",level:3},{value:"Licenses and Attributions",id:"licenses-and-attributions",level:2}];function a(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"multi-protocol-programmer",children:"Multi-Protocol Programmer"})}),"\n",(0,s.jsxs)("div",{align:"center",children:[(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/version-1.0-blue.svg",alt:"Version"})}),(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/language-Python-lightgrey.svg",alt:"Language"})}),(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/language-C-lightgrey.svg",alt:"Language"})}),(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/license-MIT-green.svg",alt:"License"})})]}),"\n",(0,s.jsx)("div",{align:"center",children:(0,s.jsx)("a",{href:"./docs/unit_product_brief.pdf",children:(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/refs/heads/main/hardware/resources/programmer.png",width:"500px",alt:"Multi-Protocol Programmer"})})}),"\n",(0,s.jsxs)(r.admonition,{title:"\u26a0\ufe0f IMPORTANT WARNING",type:"warning",children:[(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Users must load specific firmware according to their needs."})}),(0,s.jsx)(r.p,{children:"This programmer requires you to load the corresponding firmware for the protocol you want to use:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"AVR Firmware"})," for ATmega/ATtiny devices"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"CMSIS-DAP Firmware"})," for ARM Cortex-M microcontrollers"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"CPLD Firmware"})," for Intel/Altera MAX II devices"]}),"\n"]}),(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Without the appropriate firmware, the device will not work correctly."})})]}),"\n",(0,s.jsx)(r.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.strong,{children:"Multi-Protocol Programmer"})," is a versatile USB device based on the ",(0,s.jsx)(r.strong,{children:"CH552"})," microcontroller that supports multiple programming and debugging protocols. Compatible with ",(0,s.jsx)(r.strong,{children:"AVR"}),", ",(0,s.jsx)(r.strong,{children:"ARM Cortex-M"}),", and ",(0,s.jsx)(r.strong,{children:"Intel/Altera MAX II CPLD"})," devices."]}),"\n",(0,s.jsx)(r.h3,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\ud83d\udd0c ",(0,s.jsx)(r.strong,{children:"USB Full-Speed Interface"})," (CDC/HID depending on firmware)"]}),"\n",(0,s.jsxs)(r.li,{children:["\u26a1 ",(0,s.jsx)(r.strong,{children:"Voltage selector"}),": 3.3V / 5V with switch"]}),"\n",(0,s.jsxs)(r.li,{children:["\ud83d\udd04 ",(0,s.jsx)(r.strong,{children:"Interchangeable firmware"})," for different protocols"]}),"\n",(0,s.jsxs)(r.li,{children:["\ud83d\udee0\ufe0f ",(0,s.jsx)(r.strong,{children:"Compatible"})," with industry-standard tools"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"resources-and-documentation",children:"Resources and Documentation"}),"\n",(0,s.jsx)("div",{className:"table-center",children:(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Resource"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Description"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Link"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83d\udcda ",(0,s.jsx)(r.strong,{children:"Complete Documentation"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Detailed programmer guide"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://unit-electronics-mx.github.io/unit_multiprotocol_programmer_platform/",children:"View Documentation"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83d\ude80 ",(0,s.jsx)(r.strong,{children:"Getting Started"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Initial setup tutorial"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://unit-electronics-mx.github.io/unit_ch552_multiprotocol_programmer/index.html",children:"Start Here"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83d\udccb ",(0,s.jsx)(r.strong,{children:"Schematic"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Electronic circuit design"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://github.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/blob/main/hardware/unit_sch_V_0_0_1_ue0090_CH552_USB_Multi-Protocol-Programmer.pdf",children:"View Schematic"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83d\udd27 ",(0,s.jsx)(r.strong,{children:"PCB Design"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Board design files"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://github.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/tree/main/hardware",children:"View Design"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83d\udcbb ",(0,s.jsx)(r.strong,{children:"Firmware"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Source code and binaries"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://github.com/UNIT-Electronics-MX/unit_ch55x_docker_sdk/tree/main/examples/usb/prog",children:"View Code"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83e\uddea ",(0,s.jsx)(r.strong,{children:"Development SDK"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"CH55x development tools"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://github.com/UNIT-Electronics-MX/unit_ch55x_docker_sdk",children:"View SDK"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsxs)(r.td,{style:{textAlign:"center"},children:["\ud83d\udce6 ",(0,s.jsx)(r.strong,{children:"Main Repository"})]}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Complete source code"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.a,{href:"https://github.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer",children:"GitHub"})})]})]})]})}),"\n",(0,s.jsx)(r.h2,{id:"technical-specifications",children:"Technical Specifications"}),"\n",(0,s.jsx)(r.h3,{id:"base-hardware",children:"Base Hardware"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Microcontroller"}),": CH552G / CH552E / CH552P"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"USB Interface"}),": Full-Speed (12 Mbps)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Power Supply"}),": USB Bus (5V) with internal regulator"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Output Voltage"}),": Selectable 3.3V / 5V via switch"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connectors"}),": Standard pin headers for programming connections"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"supported-protocols",children:"Supported Protocols"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\ud83d\udd0c ",(0,s.jsx)(r.strong,{children:"AVR"}),": USBasp, Serial UPDI"]}),"\n",(0,s.jsxs)(r.li,{children:["\ud83d\udee1\ufe0f ",(0,s.jsx)(r.strong,{children:"ARM"}),": SWD, JTAG (CMSIS-DAP)"]}),"\n",(0,s.jsxs)(r.li,{children:["\u2699\ufe0f ",(0,s.jsx)(r.strong,{children:"CPLD"}),": JTAG (USB-Blaster compatible)"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"available-firmware-profiles",children:"Available Firmware Profiles"}),"\n",(0,s.jsx)(r.admonition,{title:"\ud83d\udccb Firmware Selection",type:"info",children:(0,s.jsxs)(r.p,{children:["Each firmware is optimized for a specific type of device. ",(0,s.jsx)(r.strong,{children:"You must load the correct firmware before using the programmer."})]})}),"\n",(0,s.jsx)(r.h3,{id:"1--avr-programmer-firmware",children:"1. \ud83d\udd27 AVR Programmer Firmware"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"For AVR microcontrollers (ATmega, ATtiny, etc.)"})}),"\n",(0,s.jsx)(r.h4,{id:"features",children:"Features:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Protocols"}),": USBasp and Serial UPDI"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Target devices"}),": Complete Microchip AVR family"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"USB Interface"}),": HID (USBasp) / CDC (Serial UPDI)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Voltage"}),": Selectable 3.3V or 5V"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"compatible-tools",children:"Compatible tools:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\u2705 ",(0,s.jsx)(r.code,{children:"avrdude"})]}),"\n",(0,s.jsx)(r.li,{children:"\u2705 PlatformIO"}),"\n",(0,s.jsx)(r.li,{children:"\u2705 Arduino IDE"}),"\n",(0,s.jsx)(r.li,{children:"\u2705 Atmel Studio / Microchip Studio"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"compilation",children:"Compilation:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Compile with SDCC\nmake avr\n\n# Or flash precompiled binary\npython3 tools/chprog.py firmware/avr_programmer.bin\n"})}),"\n",(0,s.jsx)(r.admonition,{title:"\ud83d\udca1 Technical Note",type:"tip",children:(0,s.jsx)(r.p,{children:"USBasp mode enumerates as HID device, while Serial UPDI uses virtual CDC port."})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"2-\ufe0f-arm-debugger-firmware-cmsis-dap",children:"2. \ud83d\udee1\ufe0f ARM Debugger Firmware (CMSIS-DAP)"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"For ARM Cortex-M microcontrollers"})}),"\n",(0,s.jsx)(r.h4,{id:"features-1",children:"Features:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Protocols"}),": SWD and JTAG (CMSIS-DAP standard)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Target devices"}),": STM32, SAM, nRF52, ESP32-C3, etc."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"USB Interface"}),": HID + optional CDC"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Speed"}),": Up to 10 MHz SWD/JTAG"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"compatible-tools-1",children:"Compatible tools:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\u2705 ",(0,s.jsx)(r.a,{href:"http://openocd.org/",children:"OpenOCD"})]}),"\n",(0,s.jsx)(r.li,{children:"\u2705 PyOCD"}),"\n",(0,s.jsx)(r.li,{children:"\u2705 Keil \xb5Vision"}),"\n",(0,s.jsx)(r.li,{children:"\u2705 STM32CubeIDE"}),"\n",(0,s.jsx)(r.li,{children:"\u2705 PlatformIO"}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"drivers",children:"Drivers:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Linux/macOS"}),": Native support (no additional drivers)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Windows"}),": Automatic drivers via WinUSB"]}),"\n"]}),"\n",(0,s.jsx)(r.admonition,{title:"\u26a0\ufe0f Compatibility",type:"warning",children:(0,s.jsx)(r.p,{children:"Some IDEs may require specific configuration to recognize the device as CMSIS-DAP."})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"3-\ufe0f-cpld-programmer-firmware",children:"3. \u2699\ufe0f CPLD Programmer Firmware"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"For Intel/Altera MAX II devices"})}),"\n",(0,s.jsx)(r.h4,{id:"features-2",children:"Features:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Target devices"}),": EPM240, EPM570, EPM1270, etc."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Protocol"}),": JTAG via USB-Blaster emulation"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Compatibility"}),": Intel Quartus Prime (all versions)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Speed"}),": USB-Blaster specification compliant"]}),"\n"]}),"\n",(0,s.jsx)(r.h4,{id:"configuration-options",children:"Configuration options:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Safe mode"})," (default): VID:",(0,s.jsx)(r.code,{children:"0x16C0"})," PID:",(0,s.jsx)(r.code,{children:"0x05DC"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Compatibility mode"}),": VID:",(0,s.jsx)(r.code,{children:"0x09FB"})," PID:",(0,s.jsx)(r.code,{children:"0x6001"})]}),"\n"]}),"\n",(0,s.jsx)(r.admonition,{title:"\ud83d\udea8 Compatibility Mode",type:"caution",children:(0,s.jsx)(r.p,{children:"Compatibility mode uses Intel VID/PID. Use only for personal development and comply with corresponding licenses."})}),"\n",(0,s.jsx)(r.h2,{id:"installation-and-setup",children:"Installation and Setup"}),"\n",(0,s.jsx)(r.h3,{id:"system-requirements",children:"System Requirements"}),"\n",(0,s.jsx)(r.h4,{id:"required-software",children:"Required software:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt install build-essential sdcc python3 python3-pip git\n\n# Install Python dependencies\npip3 install pyusb\n\n# Verify installation\nsdcc --version\npython3 --version\n"})}),"\n",(0,s.jsx)(r.h4,{id:"for-windows",children:"For Windows:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://sdcc.sourceforge.net/",children:"SDCC Compiler"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://python.org/",children:"Python 3.8+"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://git-scm.com/",children:"Git for Windows"})}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"firmware-flashing-process",children:"Firmware Flashing Process"}),"\n",(0,s.jsx)(r.h4,{id:"1-enter-bootloader-mode",children:"1. Enter Bootloader Mode"}),"\n",(0,s.jsx)(r.admonition,{title:"\ud83d\udcdd Step-by-step procedure:",type:"info",children:(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Disconnect"})," the programmer from USB completely"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Hold down"})," the ",(0,s.jsx)(r.code,{children:"BOOT"})," button on the board"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Connect"})," the USB cable while keeping ",(0,s.jsx)(r.code,{children:"BOOT"})," pressed"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Release"})," the button - device enters bootloader mode"]}),"\n",(0,s.jsx)(r.li,{children:"The LED should change state indicating bootloader mode"}),"\n"]})}),"\n",(0,s.jsx)(r.h4,{id:"2-flash-the-firmware",children:"2. Flash the Firmware"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Method 1: Using chprog.py (Recommended)\npython3 tools/chprog.py firmware/firmware_name.bin\n\n# Method 2: Using WCHISPTool (Windows)\n# Open WCHISPTool and select the .bin file\n"})}),"\n",(0,s.jsx)(r.h4,{id:"3-verify-installation",children:"3. Verify Installation"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'# Verify device is recognized\nlsusb | grep -i "ch55"\n\n# For Windows, check in Device Manager\n'})}),"\n",(0,s.jsx)(r.h3,{id:"permission-setup-linux",children:"Permission Setup (Linux)"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'# Create udev rules for unprivileged access\necho \'SUBSYSTEM=="usb", ATTR{idVendor}=="4348", ATTR{idProduct}=="55e0", MODE="666"\' | sudo tee /etc/udev/rules.d/99-ch55x.rules\n\n# Reload rules\nsudo udevadm control --reload\nsudo udevadm trigger\n\n# Add user to dialout group (for serial ports)\nsudo usermod -a -G dialout $USER\n'})}),"\n",(0,s.jsx)(r.h2,{id:"firmware-compatibility-table",children:"Firmware Compatibility Table"}),"\n",(0,s.jsx)("div",{className:"table-center",children:(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Firmware"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Protocols"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Target Devices"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"USB Mode"}),(0,s.jsx)(r.th,{style:{textAlign:"center"},children:"Main Tools"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.strong,{children:"AVR"})}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"USBasp, UPDI"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"ATmega, ATtiny, AVR-DA/DB"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"CDC/HID"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"avrdude, PlatformIO"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.strong,{children:"CMSIS-DAP"})}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"SWD, JTAG"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"STM32, SAM, nRF52, ESP32-C3"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"HID+CDC"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"OpenOCD, PyOCD, Keil"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{style:{textAlign:"center"},children:(0,s.jsx)(r.strong,{children:"CPLD"})}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"JTAG (USB-Blaster)"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"EPM240, EPM570, MAX II"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"HID"}),(0,s.jsx)(r.td,{style:{textAlign:"center"},children:"Quartus Prime"})]})]})]})}),"\n",(0,s.jsx)(r.h2,{id:"common-troubleshooting",children:"Common Troubleshooting"}),"\n",(0,s.jsx)(r.h3,{id:"-device-not-recognized",children:"\u274c Device not recognized"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Possible causes and solutions:"})}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Wrong firmware loaded"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Verify firmware corresponds to intended use"}),"\n",(0,s.jsx)(r.li,{children:"Re-flash the correct firmware"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Driver issues (Windows)"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Install Zadig for libusb drivers\n# Select device and install WinUSB driver\n"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Insufficient permissions (Linux)"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Check udev rules\nsudo udevadm test /sys/bus/usb/devices/[device_path]\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"-programming-error",children:"\u274c Programming error"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Verify cable connections"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Check target voltage (3.3V vs 5V)"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Verify target device is powered"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Check protocol compatibility"})}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"-slow-programming-speed",children:"\u274c Slow programming speed"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Reduce JTAG/SWD frequency"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Verify connection quality"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.strong,{children:"Use shorter cables"})}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"licenses-and-attributions",children:"Licenses and Attributions"}),"\n",(0,s.jsx)(r.p,{children:"This project is distributed under multiple licenses depending on the component:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Hardware"}),": Creative Commons Attribution-ShareAlike 4.0"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Base firmware"}),": MIT License"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Derived components"}),": Specific licenses from each base project"]}),"\n"]}),"\n",(0,s.jsx)(r.admonition,{title:"\ud83d\udcc4 Important",type:"note",children:(0,s.jsxs)(r.p,{children:["Consult the ",(0,s.jsx)(r.code,{children:"LICENSE"})," file in each firmware directory for specific licensing details."]})})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);