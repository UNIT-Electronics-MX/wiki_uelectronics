"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6837],{5609:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Sensors/bno055_bmp280","title":"BNO055 BMP280 Sensors","description":"This module combines two sensors on a single board:","source":"@site/docs/Sensors/bno055_bmp280.md","sourceDirName":"Sensors","slug":"/Sensors/bno055_bmp280","permalink":"/wiki_uelectronics/docs/Sensors/bno055_bmp280","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Sensors/bno055_bmp280.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"BNO055 Module","permalink":"/wiki_uelectronics/docs/Sensors/bno055_"},"next":{"title":"Magnetometer BMM150","permalink":"/wiki_uelectronics/docs/Sensors/bmm150"}}');var t=r(4848),s=r(8453);const l={sidebar_position:4},a="BNO055 BMP280 Sensors",o={},c=[{value:"Features",id:"features",level:2},{value:"Module Applications",id:"module-applications",level:2},{value:"Example Code",id:"example-code",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"bno055-bmp280-sensors",children:"BNO055 BMP280 Sensors"})}),"\n",(0,t.jsx)(n.p,{children:"This module combines two sensors on a single board:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BNO055"}),": 9-DOF absolute orientation sensor (accelerometer, gyroscope, magnetometer) with on-board sensor fusion."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"BMP280"}),": high-precision barometric pressure and temperature sensor."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Perfect for robotics, inertial navigation, drones, environmental monitoring and IoT projects."}),"\n",(0,t.jsxs)("div",{align:"center",children:[(0,t.jsxs)("a",{href:"https://github.com/UNIT-Electronics-MX/unit_bno055_bmp280_module/blob/main/docs/unit_bno055_bmp280_module_product_brief.pdf",target:"_blank",children:[(0,t.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_bno055_bmp280_module/refs/heads/main/hardware/resources/unit_top_v_0_0_1_ue0091_BNO055_BMP280.png",width:"500px"}),(0,t.jsx)("br",{}),"BNO055 + BMO280 Module"]}),(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"BNO055"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Feature"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"On-chip sensor fusion"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"quaternions"}),", ",(0,t.jsx)(n.code,{children:"Euler angles"}),", ",(0,t.jsx)(n.code,{children:"gravity vectors"}),", etc."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Accelerometer"})," ranges"]}),(0,t.jsx)(n.td,{children:"\xb12/4/8/16 g"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Gyroscope"})," ranges"]}),(0,t.jsx)(n.td,{children:"\xb1125/250/500/1000/2000 \xb0/s"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"Magnetometer"})," ranges"]}),(0,t.jsx)(n.td,{children:"\xb11.3/1.9/2.5/4.0/4.7/5.6/8.1 gauss"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Protocol"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"I\xb2C"}),", ",(0,t.jsx)(n.code,{children:"UART"})," (select via PS0/PS1)"]})]})]})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"BMP280"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Feature"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Pressure range"})}),(0,t.jsx)(n.td,{children:"300\u20261100 hPa (\xb110\u2026+1 m)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Temperature accuracy"})}),(0,t.jsx)(n.td,{children:"\xb11 \xb0C"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Protocol"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"I\xb2C"}),", ",(0,t.jsx)(n.code,{children:"UART"}),", ",(0,t.jsx)(n.code,{children:"SWD"})]})]})]})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"module-applications",children:"Module Applications"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Application"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Portable weather station"})}),(0,t.jsx)(n.td,{children:"Measures temperature, humidity, and pressure accurately."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\ud83e\ude82 Altimeter / variometer"}),(0,t.jsx)(n.td,{children:"Calculates altitude based on atmospheric pressure."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Posture tracking"})}),(0,t.jsx)(n.td,{children:"Detects body tilt or rotation."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Inertial navigation"})}),(0,t.jsx)(n.td,{children:"Tracks movement and orientation without GPS."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Augmented / virtual reality"})}),(0,t.jsx)(n.td,{children:"Provides orientation for 3D environments."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Flight controller"})}),(0,t.jsx)(n.td,{children:"Stabilization for drones or robots."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Gesture interface"})}),(0,t.jsx)(n.td,{children:"Uses motion to control devices."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"IoT environmental logging"})}),(0,t.jsx)(n.td,{children:"Collects and transmits environmental conditions."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"example-code",children:"Example Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'\n#include <Wire.h>\n#include <Adafruit_Sensor.h>\n#include <Adafruit_BNO055.h>\n#include <Adafruit_BMP280.h>\n#include <utility/imumaths.h>\n\n// BNO055: orientaci\xf3n y movimiento\nAdafruit_BNO055 bno(55, 0x28, &Wire);\n\n// BMP280: temperatura y presi\xf3n\nAdafruit_BMP280 bmp;\nAdafruit_Sensor* bmp_temp = bmp.getTemperatureSensor();\nAdafruit_Sensor* bmp_pressure = bmp.getPressureSensor();\n\nvoid setup() {\n  Serial.begin(115200);\n  while (!Serial);\n\n  // Inicializar BNO055\n  if (!bno.begin()) {\n    Serial.println("{\\"error\\":\\"BNO055 not detected\\"}");\n    while (1);\n  }\n  delay(1000);  // Estabilizar BNO055\n\n  // Inicializar BMP280 en direcci\xf3n 0x76\n  if (!bmp.begin(0x76)) {\n    Serial.println("{\\"error\\":\\"BMP280 not detected at 0x76\\"}");\n    while (1);\n  }\n\n  bmp.setSampling(Adafruit_BMP280::MODE_NORMAL,\n                  Adafruit_BMP280::SAMPLING_X2,\n                  Adafruit_BMP280::SAMPLING_X16,\n                  Adafruit_BMP280::FILTER_X16,\n                  Adafruit_BMP280::STANDBY_MS_500);\n}\n\nvoid loop() {\n  // Eventos del BNO055\n  sensors_event_t orientation, gyro, linearAccel, magnetometer, accel, gravity;\n  bno.getEvent(&orientation,    Adafruit_BNO055::VECTOR_EULER);\n  bno.getEvent(&gyro,           Adafruit_BNO055::VECTOR_GYROSCOPE);\n  bno.getEvent(&linearAccel,    Adafruit_BNO055::VECTOR_LINEARACCEL);\n  bno.getEvent(&magnetometer,   Adafruit_BNO055::VECTOR_MAGNETOMETER);\n  bno.getEvent(&accel,          Adafruit_BNO055::VECTOR_ACCELEROMETER);\n  bno.getEvent(&gravity,        Adafruit_BNO055::VECTOR_GRAVITY);\n\n  // BMP280: temperatura y presi\xf3n\n  sensors_event_t temp_event, pressure_event;\n  bmp_temp->getEvent(&temp_event);\n  bmp_pressure->getEvent(&pressure_event);\n\n  // Calibraci\xf3n BNO055\n  int8_t temp_bno = bno.getTemp();\n  uint8_t sys, gyroCal, accelCal, magCal;\n  bno.getCalibration(&sys, &gyroCal, &accelCal, &magCal);\n\n  // JSON OUTPUT\n  Serial.print("{");\n\n  // BMP280\n  Serial.print("\\"bmp280\\":{\\"temperature\\":"); Serial.print(temp_event.temperature, 2);\n  Serial.print(",\\"pressure\\":"); Serial.print(pressure_event.pressure, 2); Serial.print("},");\n\n  // BNO055 - orientaci\xf3n\n  Serial.print("\\"orientation\\":{\\"x\\":"); Serial.print(orientation.orientation.x, 2);\n  Serial.print(",\\"y\\":"); Serial.print(orientation.orientation.y, 2);\n  Serial.print(",\\"z\\":"); Serial.print(orientation.orientation.z, 2); Serial.print("},");\n\n  // BNO055 - giroscopio\n  Serial.print("\\"gyroscope\\":{\\"x\\":"); Serial.print(gyro.gyro.x, 2);\n  Serial.print(",\\"y\\":"); Serial.print(gyro.gyro.y, 2);\n  Serial.print(",\\"z\\":"); Serial.print(gyro.gyro.z, 2); Serial.print("},");\n\n  // BNO055 - aceleraci\xf3n lineal\n  Serial.print("\\"linear_accel\\":{\\"x\\":"); Serial.print(linearAccel.acceleration.x, 2);\n  Serial.print(",\\"y\\":"); Serial.print(linearAccel.acceleration.y, 2);\n  Serial.print(",\\"z\\":"); Serial.print(linearAccel.acceleration.z, 2); Serial.print("},");\n\n  // BNO055 - magnet\xf3metro\n  Serial.print("\\"magnetometer\\":{\\"x\\":"); Serial.print(magnetometer.magnetic.x, 2);\n  Serial.print(",\\"y\\":"); Serial.print(magnetometer.magnetic.y, 2);\n  Serial.print(",\\"z\\":"); Serial.print(magnetometer.magnetic.z, 2); Serial.print("},");\n\n  // BNO055 - aceleraci\xf3n total\n  Serial.print("\\"acceleration\\":{\\"x\\":"); Serial.print(accel.acceleration.x, 2);\n  Serial.print(",\\"y\\":"); Serial.print(accel.acceleration.y, 2);\n  Serial.print(",\\"z\\":"); Serial.print(accel.acceleration.z, 2); Serial.print("},");\n\n  // BNO055 - gravedad\n  Serial.print("\\"gravity\\":{\\"x\\":"); Serial.print(gravity.acceleration.x, 2);\n  Serial.print(",\\"y\\":"); Serial.print(gravity.acceleration.y, 2);\n  Serial.print(",\\"z\\":"); Serial.print(gravity.acceleration.z, 2); Serial.print("},");\n\n  // Temperatura interna y calibraci\xf3n\n  Serial.print("\\"bno055_temp\\":"); Serial.print(temp_bno); Serial.print(",");\n  Serial.print("\\"calibration\\":{\\"sys\\":"); Serial.print(sys);\n  Serial.print(",\\"gyro\\":"); Serial.print(gyroCal);\n  Serial.print(",\\"accel\\":"); Serial.print(accelCal);\n  Serial.print(",\\"mag\\":"); Serial.print(magCal); Serial.print("}");\n\n  Serial.println("}");\n  delay(500);\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);