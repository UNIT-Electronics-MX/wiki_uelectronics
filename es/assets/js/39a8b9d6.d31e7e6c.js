"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[397],{3831:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Development_boards/DualMCU/DualMCU","title":"DualMCU","description":"La tarjeta Unit DualMCU integra el microcontrolador Raspberry Pi RP2040 y el chip Espressif ESP32 WROOM en un \xfanico m\xf3dulo, permiti\xe9ndote aprovechar al m\xe1ximo el procesador ARM\xae Cortex\xae-M0+ de doble n\xfacleo de 32 bits para desarrollar proyectos de Internet de las Cosas (IoT) con conectividad Bluetooth\xae y Wi-Fi.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/Development_boards/DualMCU/DualMCU.md","sourceDirName":"Development_boards/DualMCU","slug":"/Development_boards/DualMCU/","permalink":"/wiki_uelectronics/es/docs/Development_boards/DualMCU/","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Development_boards/DualMCU/DualMCU.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"DualMCU Development boards","permalink":"/wiki_uelectronics/es/docs/category/dualmcu-development-boards"},"next":{"title":"DualMCU ONE","permalink":"/wiki_uelectronics/es/docs/Development_boards/DualMCU/DualMCU_ONE"}}');var o=n(4848),i=n(8453);const a={sidebar_position:1},s="DualMCU",l={},c=[{value:"Pinout",id:"pinout",level:2},{value:"M\xe1s detalles",id:"m\xe1s-detalles",level:3},{value:"Aplicaciones",id:"aplicaciones",level:3},{value:"Soporte",id:"soporte",level:3}];function d(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"dualmcu",children:"DualMCU"})}),"\n",(0,o.jsx)(t.p,{children:"La tarjeta Unit DualMCU integra el microcontrolador Raspberry Pi RP2040 y el chip Espressif ESP32 WROOM en un \xfanico m\xf3dulo, permiti\xe9ndote aprovechar al m\xe1ximo el procesador ARM\xae Cortex\xae-M0+ de doble n\xfacleo de 32 bits para desarrollar proyectos de Internet de las Cosas (IoT) con conectividad Bluetooth\xae y Wi-Fi."}),"\n",(0,o.jsx)(t.p,{children:"DualMCU se ha concebido como una mezcla entre dos microprocesadores de 32 bits: un Raspberry RP2040 con n\xfacleo Cortex M0+ a 133 MHz y un Espressif ESP32 que alcanza hasta 240 MHz. De este modo, combinamos la potencia de ambos microcontroladores en una sola tarjeta de desarrollo. Con un tama\xf1o de PCB de 36mm x 84mm y utilizando tecnolog\xeda de montaje superficial, se integran cuatro n\xfacleos programables con funciones inal\xe1mbricas y un consumo de energ\xeda muy bajo."}),"\n",(0,o.jsx)("div",{style:{textAlign:"center"},children:(0,o.jsxs)("a",{href:"https://uelectronics.com/producto/unit-dualmcu-esp32-rp2040-tarjeta-de-desarrollo/",children:[(0,o.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics/DualMCU/refs/heads/main/Docs/DUALMCU_TOP_3D.png",width:"300px"}),(0,o.jsx)("br",{}),(0,o.jsx)("em",{children:"Haz clic aqu\xed para comprar uno en la tienda de UNIT Electronics"})]})}),"\n",(0,o.jsx)(t.h2,{id:"pinout",children:"Pinout"}),"\n",(0,o.jsx)(t.p,{children:"La tarjeta de desarrollo DualMCU cuenta con una amplia variedad de pines de entrada/salida (E/S) que te permiten conectar sensores, actuadores y otros dispositivos a la tarjeta. A continuaci\xf3n, se muestra el pinout de la tarjeta DualMCU:"}),"\n",(0,o.jsx)("div",{style:{textAlign:"center"},children:(0,o.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics/DualMCU/refs/heads/main/Hardware/Resources/EU0002-DUALMCU%20V3.1.2.jpg",width:"1200px"})}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)("div",{style:{textAlign:"center"},children:(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Recurso"}),(0,o.jsx)(t.th,{children:"Enlace"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Curso de MicroPython (Versi\xf3n en ingl\xe9s)"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.a,{href:"https://unit-electronics.github.io/DualMCU_Getting_Started/",children:"https://unit-electronics.github.io/DualMCU_Getting_Started/"})})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"Curso de MicroPython (Versi\xf3n en espa\xf1ol)"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.a,{href:"https://unit-electronics-mx.github.io/DualMCU_Curso_introductorio/index.html",children:"https://unit-electronics-mx.github.io/DualMCU_Curso_introductorio/index.html"})})]})]})]})}),"\n",(0,o.jsx)(t.h3,{id:"m\xe1s-detalles",children:"M\xe1s detalles"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://uelectronics.com/",children:"P\xe1gina oficial de UNIT Electronics"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/UNIT-Electronics/DualMCU/tree/main/Hardware",children:"Hardware-DualMCU"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/UNIT-Electronics/DualMCU/blob/main/DualMCU(Product%20Reference%20Manual).pdf",children:"Manual de Referencia del Producto (PDF)"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/UNIT-Electronics/DualMCU/tree/main/Examples",children:"Archivos de ejemplos en C++ y MicroPython"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/UNIT-Electronics/DualMCU_Getting_Started",children:"DualMCU Getting Started"})}),"\n"]}),"\n",(0,o.jsxs)(t.admonition,{type:"tip",children:[(0,o.jsx)(t.h3,{id:"aplicaciones",children:"Aplicaciones"}),(0,o.jsx)(t.p,{children:"Internet de las Cosas (IoT), prototipos, aprendizaje autom\xe1tico, evaluaci\xf3n y desarrollo, rob\xf3tica."})]}),"\n",(0,o.jsx)(t.h3,{id:"soporte",children:"Soporte"}),"\n",(0,o.jsx)(t.p,{children:"La tarjeta de desarrollo DualMCU es compatible con entornos de desarrollo integrados como el de Micropython (por ejemplo, Thonny) y tambi\xe9n con el entorno de Arduino. Esto significa que puedes programar la DualMCU utilizando tanto Micropython o Circuitpython, como el lenguaje de Arduino."}),"\n",(0,o.jsx)(t.p,{children:"El soporte para Micropython incluye una consola interactiva (REPL) que te permite ejecutar comandos de forma inmediata, facilitando la prueba y depuraci\xf3n de tu c\xf3digo."}),"\n",(0,o.jsx)(t.p,{children:"Adem\xe1s, el soporte para Arduino te permite aprovechar las herramientas y la extensa comunidad de usuarios de Arduino para desarrollar proyectos con la tarjeta DualMCU, lo cual es especialmente \xfatil si ya est\xe1s familiarizado con este entorno."}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:(0,o.jsx)(t.em,{children:(0,o.jsx)(t.strong,{children:"\xcdndice del Paquete Arduino RP2040 (JSON)"})})}),(0,o.jsx)(t.th,{children:(0,o.jsx)(t.em,{children:(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.a,{href:"https://github.com/UNIT-Electronics/Uelectronics-RP2040-Arduino-Package",children:"https://github.com/UNIT-Electronics/Uelectronics-RP2040-Arduino-Package"})})})})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.em,{children:(0,o.jsx)(t.strong,{children:"\xcdndice del Paquete Arduino ESP32 (JSON)"})})}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.em,{children:(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.a,{href:"https://github.com/UNIT-Electronics/Uelectronics-ESP32-Arduino-Package",children:"https://github.com/UNIT-Electronics/Uelectronics-ESP32-Arduino-Package"})})})})]})})]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(6540);const o={},i=r.createContext(o);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);