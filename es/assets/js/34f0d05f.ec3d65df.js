"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2017],{5692:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Development_boards/develab/multiprotocol","title":"Programador Multi-Protocolo","description":"Compatible con AVR, ARM (CMSIS-DAP) y CPLD (MAX II)","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/Development_boards/develab/multiprotocol.md","sourceDirName":"Development_boards/develab","slug":"/Development_boards/develab/multiprotocol","permalink":"/wiki_uelectronics/es/docs/Development_boards/develab/multiprotocol","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Development_boards/develab/multiprotocol.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"DevLab development boards","permalink":"/wiki_uelectronics/es/docs/category/devlab-development-boards"},"next":{"title":"Cocket Nova","permalink":"/wiki_uelectronics/es/docs/Development_boards/develab/cocket_nova"}}');var s=i(4848),l=i(8453);const o={sidebar_position:1},d="Programador Multi-Protocolo",c={},a=[{value:"Descripci\xf3n del Hardware",id:"descripci\xf3n-del-hardware",level:2},{value:"Perfiles de Firmware",id:"perfiles-de-firmware",level:2},{value:"Firmware de Programador AVR",id:"firmware-de-programador-avr",level:3},{value:"Firmware de Depurador CMSIS-DAP (picoDAP)",id:"firmware-de-depurador-cmsis-dap-picodap",level:3},{value:"Firmware de Programador CPLD (JTAG, Compatible con Quartus)",id:"firmware-de-programador-cpld-jtag-compatible-con-quartus",level:3},{value:"Herramientas y Flasheo",id:"herramientas-y-flasheo",level:2},{value:"Dependencias",id:"dependencias",level:3},{value:"Flasheo de Firmware (Linux/Windows/macOS)",id:"flasheo-de-firmware-linuxwindowsmacos",level:3},{value:"Modo Bootloader (CH552)",id:"modo-bootloader-ch552",level:2},{value:"Resumen de Capacidades del Firmware",id:"resumen-de-capacidades-del-firmware",level:2},{value:"\ud83e\udeaa Licencia",id:"-licencia",level:2}];function t(e){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"programador-multi-protocolo",children:"Programador Multi-Protocolo"})}),"\n",(0,s.jsxs)("div",{align:"center",children:[(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/version-1.0-blue.svg",alt:"Versi\xf3n"})}),(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/language-Python-lightgrey.svg",alt:"Lenguaje"})}),(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/language-C-lightgrey.svg",alt:"Lenguaje"})}),(0,s.jsx)("a",{href:"#",children:(0,s.jsx)("img",{src:"https://img.shields.io/badge/license-MIT-green.svg",alt:"Licencia"})}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)("div",{align:"center",children:[(0,s.jsx)("p",{href:"./docs/unit_product_brief.pdf",children:(0,s.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/refs/heads/main/hardware/resources/programmer.png",width:"500px"})}),(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compatible con AVR, ARM (CMSIS-DAP) y CPLD (MAX II)"})}),"\n",(0,s.jsxs)(r.p,{children:["Este proyecto proporciona firmware para un programador USB basado en el ",(0,s.jsx)(r.strong,{children:"microcontrolador CH552"}),", compatible con m\xfaltiples objetivos y protocolos de programaci\xf3n, incluyendo dispositivos ",(0,s.jsx)(r.strong,{children:"AVR"}),", ",(0,s.jsx)(r.strong,{children:"ARM Cortex-M"})," y ",(0,s.jsx)(r.strong,{children:"CPLD"}),". El dispositivo incluye ",(0,s.jsx)(r.strong,{children:"selecci\xf3n de voltaje objetivo (3.3V / 5V)"})," y puede configurarse con diferentes firmware para adaptarse a familias espec\xedficas de microcontroladores."]}),"\n",(0,s.jsx)("div",{style:{display:"flex",justifyContent:"center"},children:(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Tema"}),(0,s.jsx)("th",{children:"Enlace"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Programador Multi-Protocolo"}),(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://unit-electronics-mx.github.io/unit_multiprotocol_programmer_platform/",target:"_blank",children:(0,s.jsx)(r.p,{children:"Programador Multi-Protocolo"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Primeros Pasos"}),(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://unit-electronics-mx.github.io/unit_ch552_multiprotocol_programmer/index.html",target:"_blank",children:(0,s.jsx)(r.p,{children:"Primeros Pasos"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Dise\xf1o Esquem\xe1tico"}),(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://github.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/blob/main/hardware/unit_sch_V_0_0_1_ue0090_CH552_USB_Multi-Protocol-Programmer.pdf",target:"_blank",children:(0,s.jsx)(r.p,{children:"Dise\xf1o Esquem\xe1tico"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Dise\xf1o de PCB"}),(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://github.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/tree/main/hardware",target:"_blank",children:(0,s.jsx)(r.p,{children:"Dise\xf1o de PCB"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Desarrollo de Firmware"}),(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://github.com/UNIT-Electronics-MX/unit_ch552_multiprotocol_programmer/tree/main/software/PICO-DAP",target:"_blank",children:(0,s.jsx)(r.p,{children:"Desarrollo de Firmware"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"Pruebas y Depuraci\xf3n"}),(0,s.jsx)("td",{children:(0,s.jsx)("a",{href:"https://github.com/UNIT-Electronics-MX/unit_ch55x_docker_sdk",target:"_blank",children:(0,s.jsx)(r.p,{children:"Pruebas y Depuraci\xf3n"})})})]})]})]})}),"\n",(0,s.jsx)(r.h2,{id:"descripci\xf3n-del-hardware",children:"Descripci\xf3n del Hardware"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Microcontrolador: ",(0,s.jsx)(r.strong,{children:"CH552G / CH552E / CH552P"})]}),"\n",(0,s.jsx)(r.li,{children:"Interfaz USB Full-Speed (CDC / HID dependiendo del firmware)"}),"\n",(0,s.jsxs)(r.li,{children:["Selector de Voltaje: ",(0,s.jsx)(r.strong,{children:"3.3V / 5V"})," con interruptor de suministro"]}),"\n",(0,s.jsxs)(r.li,{children:["Perfiles de firmware programables:","\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Programador AVR"})," (USBasp o Serial UPDI)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Depurador ARM CMSIS-DAP"})," (firmware picoDAP)"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Programador CPLD JTAG"})," (compatible con Quartus)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"perfiles-de-firmware",children:"Perfiles de Firmware"}),"\n",(0,s.jsx)(r.h3,{id:"firmware-de-programador-avr",children:"Firmware de Programador AVR"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Protocolos:"})," USBasp, SerialUPDI"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Dispositivos Objetivo:"})," ATmega, ATtiny y otros MCUs AVR"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Interfaz USB:"})," Compatible con libusb"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Compatibilidad con Herramientas:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"avrdude"})}),"\n",(0,s.jsx)(r.li,{children:"PlatformIO"}),"\n",(0,s.jsx)(r.li,{children:"Windows (Zadig/libusb)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Voltaje:"})," Seleccionable 3.3V o 5V"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Opciones de Compilaci\xf3n:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Compilar con ",(0,s.jsx)(r.a,{href:"https://sdcc.sourceforge.net/",children:"SDCC"})]}),"\n",(0,s.jsxs)(r.li,{children:["O flashear binarios precompilados usando ",(0,s.jsx)(r.code,{children:"tools/chprog.py"})]}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"El modo USBasp se enumera como dispositivo USB HID; Serial UPDI utiliza puerto CDC."})}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"firmware-de-depurador-cmsis-dap-picodap",children:"Firmware de Depurador CMSIS-DAP (picoDAP)"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Protocolos:"})," SWD, JTAG (CMSIS-DAP)"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Dispositivos Objetivo:"})," ARM Cortex-M (e.g., STM32, SAM, nRF52)"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Compatibilidad con Herramientas:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"http://openocd.org/",children:"OpenOCD"})}),"\n",(0,s.jsx)(r.li,{children:"PyOCD"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Interfaz USB:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"CMSIS-DAP v\xeda HID"}),"\n",(0,s.jsx)(r.li,{children:"UART CDC (opcional, para registro o VCP)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Controladores:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Linux/macOS: Nativo"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.em,{children:"El dispositivo aparece como HID con puerto COM serial opcional."})}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"firmware-de-programador-cpld-jtag-compatible-con-quartus",children:"Firmware de Programador CPLD (JTAG, Compatible con Quartus)"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Dispositivos Objetivo:"})," Intel/Altera ",(0,s.jsx)(r.strong,{children:"MAX II (e.g., EPM240)"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Protocolo:"})," JTAG v\xeda protocolo USB-Blaster"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Compatibilidad con Herramientas:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Programador Intel Quartus (v\xeda emulaci\xf3n USB-Blaster)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Opciones de VID/PID USB:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Modo de distribuci\xf3n seguro (predeterminado): ",(0,s.jsx)(r.code,{children:"0x16C0:0x05DC"})]}),"\n",(0,s.jsxs)(r.li,{children:["Modo de compatibilidad: ",(0,s.jsx)(r.code,{children:"0x09FB:0x6001"})," ",(0,s.jsx)(r.em,{children:"(para soporte completo de Quartus)"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Selecci\xf3n de Voltaje:"})," 3.3V / 5V mediante interruptor de hardware"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Sistema de Compilaci\xf3n:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Compilar con SDCC"}),"\n",(0,s.jsxs)(r.li,{children:["Flashear v\xeda bootloader WCH o ",(0,s.jsx)(r.code,{children:"chprog.py"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"herramientas-y-flasheo",children:"Herramientas y Flasheo"}),"\n",(0,s.jsx)(r.h3,{id:"dependencias",children:"Dependencias"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"https://sdcc.sourceforge.net/",children:"Compilador SDCC"})}),"\n",(0,s.jsxs)(r.li,{children:["Python 3 con ",(0,s.jsx)(r.a,{href:"https://github.com/pyusb/pyusb",children:(0,s.jsx)(r.code,{children:"pyusb"})})]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo apt install build-essential sdcc python3 python3-pip\npip3 install pyusb\n"})}),"\n",(0,s.jsx)(r.h3,{id:"flasheo-de-firmware-linuxwindowsmacos",children:"Flasheo de Firmware (Linux/Windows/macOS)"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"# Para modo bootloader\npython3 tools/chprog.py <firmware.bin>\n"})}),"\n",(0,s.jsxs)(r.p,{children:["O usar ",(0,s.jsx)(r.strong,{children:"WCHISPTool"})," para Windows."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"modo-bootloader-ch552",children:"Modo Bootloader (CH552)"}),"\n",(0,s.jsx)(r.p,{children:"Para entrar en modo bootloader USB:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"Desconectar toda la alimentaci\xf3n."}),"\n",(0,s.jsxs)(r.li,{children:["Mantener presionado el bot\xf3n ",(0,s.jsx)(r.strong,{children:"BOOT"}),"."]}),"\n",(0,s.jsx)(r.li,{children:"Reconectar USB mientras se mantiene presionado BOOT."}),"\n",(0,s.jsx)(r.li,{children:"Soltar el bot\xf3n \u2014 el dispositivo entra en modo bootloader."}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Usuarios de Linux: establecer reglas udev adecuadas si es necesario."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:'echo \'SUBSYSTEM=="usb", ATTR{idVendor}=="4348", ATTR{idProduct}=="55e0", MODE="666"\' | sudo tee /etc/udev/rules.d/99-ch55x.rules\nsudo udevadm control --reload\nsudo udevadm trigger\n'})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"resumen-de-capacidades-del-firmware",children:"Resumen de Capacidades del Firmware"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Firmware"}),(0,s.jsx)(r.th,{children:"Protocolos"}),(0,s.jsx)(r.th,{children:"Objetivos"}),(0,s.jsx)(r.th,{children:"Modo USB"}),(0,s.jsx)(r.th,{children:"Herramientas Compatibles"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Programador AVR"}),(0,s.jsx)(r.td,{children:"USBasp / UPDI"}),(0,s.jsx)(r.td,{children:"AVR (ATmega, ATtiny)"}),(0,s.jsx)(r.td,{children:"CDC / HID"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.code,{children:"avrdude"}),", PlatformIO"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"CMSIS-DAP"}),(0,s.jsx)(r.td,{children:"SWD, JTAG"}),(0,s.jsx)(r.td,{children:"ARM Cortex-M"}),(0,s.jsx)(r.td,{children:"HID + CDC"}),(0,s.jsx)(r.td,{children:"OpenOCD, PyOCD"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Programador CPLD"}),(0,s.jsx)(r.td,{children:"JTAG (Blaster)"}),(0,s.jsx)(r.td,{children:"EPM240 / MAX II"}),(0,s.jsx)(r.td,{children:"HID"}),(0,s.jsx)(r.td,{children:"Programador Quartus"})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-licencia",children:"\ud83e\udeaa Licencia"}),"\n",(0,s.jsxs)(r.p,{children:["Este proyecto est\xe1 licenciado bajo la ",(0,s.jsx)(r.strong,{children:"Licencia MIT"})," o ",(0,s.jsx)(r.strong,{children:"Creative Commons Attribution-ShareAlike 3.0"}),", dependiendo de la base del firmware utilizado. Consulte cada subproyecto de firmware para detalles espec\xedficos de la licencia."]})]})}function h(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>o,x:()=>d});var n=i(6540);const s={},l=n.createContext(s);function o(e){const r=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);