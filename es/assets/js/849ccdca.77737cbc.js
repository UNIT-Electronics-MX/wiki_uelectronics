"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4150],{3307:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"Modules/lumiknob","title":"Lumiknob","description":"El m\xf3dulo \\"Interfaz Potenci\xf3metro SPI MAX7219 32 LED Secuencial\\" permite controlar 32 LEDs de manera secuencial utilizando un potenci\xf3metro. El m\xf3dulo utiliza el protocolo SPI para comunicarse con el controlador de LEDs MAX7219, el cual gestiona la iluminaci\xf3n de los LEDs. El potenci\xf3metro se utiliza para ajustar la velocidad a la que se encienden los LEDs.","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/Modules/lumiknob.md","sourceDirName":"Modules","slug":"/Modules/lumiknob","permalink":"/wiki_uelectronics/es/docs/Modules/lumiknob","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Modules/lumiknob.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"M\xf3dulo Unit QWIIC BUS","permalink":"/wiki_uelectronics/es/docs/Modules/qwiic_bus"},"next":{"title":"UNIT - Accessories","permalink":"/wiki_uelectronics/es/docs/category/unit---accessories"}}');var a=i(4848),l=i(8453);const s={sidebar_position:6},r="Lumiknob",c={},t=[{value:"Control Secuencial de LEDs",id:"control-secuencial-de-leds",level:2},{value:"C\xf3mo Usar",id:"c\xf3mo-usar",level:2},{value:"Placas Probadas",id:"placas-probadas",level:2},{value:"C\xf3digo de Ejemplo",id:"c\xf3digo-de-ejemplo",level:2},{value:"Resultados",id:"resultados",level:2},{value:"License",id:"license",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"lumiknob",children:"Lumiknob"})}),"\n",(0,a.jsx)(n.p,{children:'El m\xf3dulo "Interfaz Potenci\xf3metro SPI MAX7219 32 LED Secuencial" permite controlar 32 LEDs de manera secuencial utilizando un potenci\xf3metro. El m\xf3dulo utiliza el protocolo SPI para comunicarse con el controlador de LEDs MAX7219, el cual gestiona la iluminaci\xf3n de los LEDs. El potenci\xf3metro se utiliza para ajustar la velocidad a la que se encienden los LEDs.'}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Placa en Desarrollo"}),": El M\xf3dulo Lumiknob se encuentra actualmente en desarrollo. La informaci\xf3n proporcionada aqu\xed puede cambiar a medida que el dise\xf1o progresa."]})}),"\n",(0,a.jsx)(n.h2,{id:"control-secuencial-de-leds",children:"Control Secuencial de LEDs"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Control Secuencial de LEDs",src:i(6526).A+"",width:"444",height:"243"})}),"\n",(0,a.jsx)(n.h2,{id:"c\xf3mo-usar",children:"C\xf3mo Usar"}),"\n",(0,a.jsxs)(n.p,{children:["Para utilizar el m\xf3dulo, deber\xe1s conectar el potenci\xf3metro y el controlador de LEDs MAX7219 a tu microcontrolador. El potenci\xf3metro debe conectarse a un pin de entrada anal\xf3gica, y el MAX7219 a los pines SPI de tu microcontrolador. Adem\xe1s, deber\xe1s incluir los archivos ",(0,a.jsx)(n.code,{children:"max7219.py"})," y ",(0,a.jsx)(n.code,{children:"main.py"})," en tu proyecto."]}),"\n",(0,a.jsx)(n.h2,{id:"placas-probadas",children:"Placas Probadas"}),"\n",(0,a.jsx)(n.p,{children:"La siguiente tabla enumera las placas de microcontrolador que han sido probadas con este m\xf3dulo:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Placa"}),(0,a.jsx)(n.th,{children:"Estado"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Arduino Uno"}),(0,a.jsx)(n.td,{children:"No Probada"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Raspberry Pi Pico"}),(0,a.jsx)(n.td,{children:"No Probada"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"ESP32C3 SuperMini"}),(0,a.jsx)(n.td,{children:"Probada y Funciona"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"c\xf3digo-de-ejemplo",children:"C\xf3digo de Ejemplo"}),"\n",(0,a.jsx)(n.p,{children:"El siguiente c\xf3digo de ejemplo ilustra c\xf3mo utilizar el m\xf3dulo con una placa ESP32C3 SuperMini:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import max7219\nfrom machine import Pin, SPI, ADC\nimport time\n\nspi = SPI(1, baudrate=10000000, polarity=1, phase=0, sck=Pin(4), mosi=Pin(6))\ncs = Pin(7, Pin.OUT)\ndisplay = max7219.Matrix8x8(spi, cs, 1)\n\ndisplay.brightness(10)\n\npot = ADC(Pin(0))\npot.atten(ADC.ATTN_11DB)\n\ndisplay.fill(0)\ndisplay.show()\n\nwhile True:\n    pot_value = pot.read()\n    num_leds = int((pot_value / 4095) * 32)\n\n    display.fill(0)\n\n    led_count = 0\n    for row in range(8):\n        for col in range(8):\n            if led_count < num_leds:\n                display.pixel(col, row, 1)\n                led_count += 1\n            else:\n                break\n\n    display.show()\n    time.sleep(0.1)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Este c\xf3digo lee el valor del potenci\xf3metro y determina la cantidad de LEDs a iluminar. Los LEDs se encienden de manera secuencial, fila por fila, de izquierda a derecha. El potenci\xf3metro controla la intensidad de la iluminaci\xf3n de los LEDs."}),"\n",(0,a.jsx)(n.h2,{id:"resultados",children:"Resultados"}),"\n",(0,a.jsx)(n.p,{children:"La imagen GIF a continuaci\xf3n muestra que el m\xf3dulo funciona como se esperaba y facilita el control secuencial de 32 LEDs mediante un potenci\xf3metro. El potenci\xf3metro regula la velocidad de iluminaci\xf3n de los LEDs de forma secuencial, de izquierda a derecha, fila por fila. El m\xf3dulo es intuitivo y se puede incorporar f\xe1cilmente a tus aplicaciones."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Control Secuencial de LEDs",src:i(7601).A+"",width:"360",height:"640"})}),"\n",(0,a.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,a.jsxs)(n.p,{children:["Este m\xf3dulo se publica bajo la licencia MIT. Eres libre de usar, modificar y distribuir este c\xf3digo seg\xfan lo desees. Consulta el archivo ",(0,a.jsx)(n.code,{children:"LICENSE"})," para m\xe1s informaci\xf3n."]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},7601:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/resized_output-dfa8a43388c50995709174259a9365c9.gif"},6526:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/schematic-b76a5ea02bf6b9d395bccec358dbe36f.PNG"},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var o=i(6540);const a={},l=o.createContext(a);function s(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);