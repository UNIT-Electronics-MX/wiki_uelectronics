"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4150],{3178:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Modules/lumiknob","title":"Lumiknob","description":"Interfaz Avanzada para Potenci\xf3metro y Controlador LED MAX7219 mediante SPI","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/Modules/lumiknob.md","sourceDirName":"Modules","slug":"/Modules/lumiknob","permalink":"/wiki_uelectronics/es/docs/Modules/lumiknob","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Modules/lumiknob.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"M\xf3dulo Unit QWIIC BUS","permalink":"/wiki_uelectronics/es/docs/Modules/qwiic_bus"},"next":{"title":"Proto Power Delivery Decoy CH224K","permalink":"/wiki_uelectronics/es/docs/Modules/proto_power_delivery_decoy"}}');var a=i(4848),r=i(8453);const l={sidebar_position:6},d="Lumiknob",t={},c=[{value:"Interfaz Avanzada para Potenci\xf3metro y Controlador LED MAX7219 mediante SPI",id:"interfaz-avanzada-para-potenci\xf3metro-y-controlador-led-max7219-mediante-spi",level:2},{value:"Descripci\xf3n General",id:"descripci\xf3n-general",level:2},{value:"Interfaz de Hardware",id:"interfaz-de-hardware",level:2},{value:"Hardware Probado",id:"hardware-probado",level:2},{value:"Ejemplo de C\xf3digo",id:"ejemplo-de-c\xf3digo",level:2},{value:"Rendimiento del M\xf3dulo",id:"rendimiento-del-m\xf3dulo",level:2},{value:"Licencia",id:"licencia",level:2}];function s(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"lumiknob",children:"Lumiknob"})}),"\n",(0,a.jsx)(n.h2,{id:"interfaz-avanzada-para-potenci\xf3metro-y-controlador-led-max7219-mediante-spi",children:"Interfaz Avanzada para Potenci\xf3metro y Controlador LED MAX7219 mediante SPI"}),"\n",(0,a.jsx)(n.p,{children:"El m\xf3dulo Lumiknob es una soluci\xf3n integral para gestionar secuencialmente 32 LEDs utilizando el controlador MAX7219 a trav\xe9s de una comunicaci\xf3n SPI. Este sistema se beneficia de la lectura precisa de un potenci\xf3metro para ajustar din\xe1micamente la velocidad de activaci\xf3n, con el valor del ADC regulando la secuencia de iluminaci\xf3n. Compatible con microcontroladores como el ESP32C3 SuperMini y la Pulsar C6, este m\xf3dulo garantiza un rendimiento estable y preciso en aplicaciones de visualizaci\xf3n de LEDs."}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Aseg\xfarate de que el ADC del potenci\xf3metro est\xe9 conectado a un pin anal\xf3gico del microcontrolador. Verifica que el voltaje de salida del potenci\xf3metro se encuentre entre 0V y 3.3V para microcontroladores de 3.3V, o entre 0V y 5V para aquellos de 5V."})}),"\n",(0,a.jsx)("p",{align:"center",children:(0,a.jsx)("img",{src:"https://raw.githubusercontent.com/UNIT-Electronics-MX/unit_lumiknob_module/refs/heads/main/hardware/resources/lumiknob.png",alt:"M\xf3dulo Lumiknob",width:"500"})}),"\n",(0,a.jsx)(n.h2,{id:"descripci\xf3n-general",children:"Descripci\xf3n General"}),"\n",(0,a.jsx)(n.p,{children:"El m\xf3dulo emplea el protocolo SPI para la comunicaci\xf3n con el controlador LED MAX7219, respaldado por un potenci\xf3metro que permite regular la velocidad de la secuencia de iluminaci\xf3n. Es fundamental establecer las conexiones correctas entre el potenci\xf3metro, el MAX7219 y los pines correspondientes del microcontrolador."}),"\n",(0,a.jsx)(n.h2,{id:"interfaz-de-hardware",children:"Interfaz de Hardware"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Potenci\xf3metro:"})," Con\xe9ctese a una entrada anal\xf3gica del microcontrolador."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"MAX7219:"})," Con\xe9ctese a los pines SPI designados (MOSI, SCK y Chip Select)."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Aseg\xfarese de que el proyecto incluya todos los archivos necesarios, como ",(0,a.jsx)(n.code,{children:"max7219.py"})," y ",(0,a.jsx)(n.code,{children:"main.py"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"hardware-probado",children:"Hardware Probado"}),"\n",(0,a.jsx)(n.p,{children:"A continuaci\xf3n se muestra una tabla con las placas de microcontrolador verificadas con este m\xf3dulo:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Placa"}),(0,a.jsx)(n.th,{children:"Estado"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Arduino Uno"}),(0,a.jsx)(n.td,{children:"No probado"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Raspberry Pi Pico"}),(0,a.jsx)(n.td,{children:"No probado"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"ESP32C3 SuperMini"}),(0,a.jsx)(n.td,{children:"Probado y funcional"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Pulsar C6"}),(0,a.jsx)(n.td,{children:"Probado y funcional"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"ejemplo-de-c\xf3digo",children:"Ejemplo de C\xf3digo"}),"\n",(0,a.jsx)(n.p,{children:"El siguiente ejemplo demuestra c\xf3mo utilizar el m\xf3dulo con una placa ESP32C3 SuperMini:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import max7219\nfrom machine import Pin, SPI, ADC\nimport time\n\nspi = SPI(1, baudrate=10000000, polarity=1, phase=0, sck=Pin(4), mosi=Pin(6))\ncs = Pin(7, Pin.OUT)\ndisplay = max7219.Matrix8x8(spi, cs, 1)\n\ndisplay.brightness(10)\n\npot = ADC(Pin(0))\npot.atten(ADC.ATTN_11DB)\n\ndisplay.fill(0)\ndisplay.show()\n\nwhile True:\n        pot_value = pot.read()\n        num_leds = int((pot_value / 4095) * 32)\n\n        display.fill(0)\n        led_count = 0\n        for row in range(8):\n                for col in range(8):\n                        if led_count < num_leds:\n                                display.pixel(col, row, 1)\n                                led_count += 1\n                        else:\n                                break\n\n        display.show()\n        time.sleep(0.1)\n"})}),"\n",(0,a.jsx)(n.p,{children:"El ejemplo calcula y enciende el n\xfamero correspondiente de LEDs en funci\xf3n del valor le\xeddo del potenci\xf3metro, avanzando de forma secuencial por filas."}),"\n",(0,a.jsx)(n.h2,{id:"rendimiento-del-m\xf3dulo",children:"Rendimiento del M\xf3dulo"}),"\n",(0,a.jsx)(n.p,{children:"El GIF a continuaci\xf3n ilustra claramente el funcionamiento del m\xf3dulo. El potenci\xf3metro permite ajustar de manera efectiva la velocidad de activaci\xf3n de los 32 LEDs, asegurando una transici\xf3n fluida en el display."}),"\n",(0,a.jsx)("p",{align:"center",children:(0,a.jsx)("img",{src:"https://github.com/UNIT-Electronics-MX/unit_lumiknob_module/blob/main/hardware/resources/resized_output.gif?raw=true",alt:"Demostraci\xf3n de Secuencia de LED",width:"500"})}),"\n",(0,a.jsx)(n.h2,{id:"licencia",children:"Licencia"}),"\n",(0,a.jsx)(n.p,{children:"El m\xf3dulo se distribuye bajo los t\xe9rminos de la licencia de c\xf3digo abierto aplicable."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var o=i(6540);const a={},r=o.createContext(a);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);