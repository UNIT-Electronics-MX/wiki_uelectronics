"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3403],{2528:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Code/Compatibility_Arduino_upython/upython","title":"Gu\xeda de compatibilidad con MicroPython","description":"Cocket Nova CH552 no es compatible con MicroPython","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/Code/Compatibility_Arduino_upython/upython.md","sourceDirName":"Code/Compatibility_Arduino_upython","slug":"/Code/Compatibility_Arduino_upython/upython","permalink":"/wiki_uelectronics/es/docs/Code/Compatibility_Arduino_upython/upython","draft":false,"unlisted":false,"editUrl":"https://github.com/UNIT-Electronics/docs/Code/Compatibility_Arduino_upython/upython.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Gu\xeda de Instalaci\xf3n del Paquete JSON UNIT Electronics","permalink":"/wiki_uelectronics/es/docs/Code/Compatibility_Arduino_upython/Arduino"},"next":{"title":"Gu\xeda para pantalla TFT ST7789V con MicroPython","permalink":"/wiki_uelectronics/es/docs/Code/tft_st7789v"}}');var r=i(4848),o=i(8453);const t={sidebar_position:2},s="Gu\xeda de compatibilidad con MicroPython",l={},c=[{value:"Instalaci\xf3n utilizando Thonny IDE",id:"instalaci\xf3n-utilizando-thonny-ide",level:2},{value:"Interfaz de configuraci\xf3n para actualizar MicroPython",id:"interfaz-de-configuraci\xf3n-para-actualizar-micropython",level:3},{value:"Actualizaci\xf3n de firmware (ESP32)",id:"actualizaci\xf3n-de-firmware-esp32",level:3},{value:"Instalaci\xf3n R\xe1pida Usando Esptool",id:"instalaci\xf3n-r\xe1pida-usando-esptool",level:2},{value:"Ejecutando MicroPython Terminal GNU/Linux",id:"ejecutando-micropython-terminal-gnulinux",level:3},{value:"Instalaci\xf3n R\xe1pida UF2",id:"instalaci\xf3n-r\xe1pida-uf2",level:2},{value:"Abrir y ejecutar Thonny IDE",id:"abrir-y-ejecutar-thonny-ide",level:2}];function d(n){const e={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"gu\xeda-de-compatibilidad-con-micropython",children:"Gu\xeda de compatibilidad con MicroPython"})}),"\n",(0,r.jsx)(e.admonition,{type:"caution",children:(0,r.jsxs)(e.p,{children:["Cocket Nova CH552 no es compatible con ",(0,r.jsx)(e.a,{href:"https://www.micropython.org/",children:"MicroPython"})]})}),"\n",(0,r.jsxs)(e.p,{children:["Esta gu\xeda proporciona instrucciones paso a paso para la instalaci\xf3n del firmware y la configuraci\xf3n de la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"})," (RP2040 + ESP32) para usar ",(0,r.jsx)(e.a,{href:"https://www.micropython.org/",children:"MicroPython"}),". Estas instrucciones te ayudar\xe1n a comenzar con MicroPython en tu placa y a explorar sus caracter\xedsticas."]}),"\n",(0,r.jsxs)(e.p,{children:["C\xf3mo instalar ",(0,r.jsx)(e.a,{href:"https://www.micropython.org/",children:"MicroPython"})," en la placa DualMCU-ONE/DualMCU:"]}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Recurso"}),(0,r.jsx)(e.th,{children:"Enlace"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"M\xe9todo alternativo de flasheo con Thonny"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"https://unit-electronics-mx.github.io/ecosistema-de-desarrollo-unit/upython.html",children:"https://unit-electronics-mx.github.io/ecosistema-de-desarrollo-unit/upython.html"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Gu\xeda sobre el Kit de MicroPython"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"https://github.com/UNIT-Electronics/UNIT-Pico-Starter-kit",children:"https://github.com/UNIT-Electronics/UNIT-Pico-Starter-kit"})})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"instalaci\xf3n-utilizando-thonny-ide",children:"Instalaci\xf3n utilizando Thonny IDE"}),"\n",(0,r.jsx)(e.p,{children:"Esta secci\xf3n muestra un ejemplo b\xe1sico para instalar MicroPython en la placa DualMCU con el microcontrolador ESP32 usando Thonny IDE."}),"\n",(0,r.jsxs)(e.admonition,{type:"caution",children:[(0,r.jsx)(e.p,{children:"La DualMCU cuenta con selector manual para elegir entre el microcontrolador ESP32 y RP2040. Aseg\xfarate de seleccionar el microcontrolador deseado antes de flashear el firmware."}),(0,r.jsx)("div",{align:"center",children:(0,r.jsx)("img",{src:"https://unit-electronics.github.io/DualMCU_Curso_introductorio/docs/2-Micropython/images/selector.png",alt:"Selector",width:"500"})})]}),"\n",(0,r.jsx)(e.h3,{id:"interfaz-de-configuraci\xf3n-para-actualizar-micropython",children:"Interfaz de configuraci\xf3n para actualizar MicroPython"}),"\n",(0,r.jsx)(e.p,{children:"Antes de comenzar, se recomienda realizar la siguiente configuraci\xf3n:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://thonny.org/",children:"Instalaci\xf3n de Thonny IDE"})}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Una vez que hayas instalado Thonny IDE, sigue los siguientes pasos:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Dir\xedgete a ",(0,r.jsx)(e.em,{children:'"Ejecutar"'})," -> ",(0,r.jsx)(e.em,{children:'"Configurar int\xe9rprete"'}),"  para completar la configuraci\xf3n."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/UNIT-Electronics/DualMCU-ESP32-MicroPython/refs/heads/main/img/config_intepeter.png",alt:"Interpeter"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"actualizaci\xf3n-de-firmware-esp32",children:"Actualizaci\xf3n de firmware (ESP32)"}),"\n",(0,r.jsx)(e.p,{children:"Para poder utilizar MicroPython, es recomendable considerar la actualizaci\xf3n. Por lo tanto, es necesario iniciar tu DualMCU ESP32 presionando el bot\xf3n de FLASH."}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:'Da clic en "Instalar o Actualizar MicroPython".'}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Se abrir\xe1 una nueva ventana."}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Se recomienda utilizar la siguiente configuraci\xf3n:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Variant: Espessif ESP32/WROOM"}),"\n",(0,r.jsx)(e.li,{children:"Version: 1.20.0"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/UNIT-Electronics/DualMCU-ESP32-MicroPython/refs/heads/main/img/instalador.png",alt:"instalador"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Presionar instalar (esperar a que termine la instalaci\xf3n)."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Estos pasos te permitir\xe1n actualizar y configurar MicroPython de manera adecuada en tu DualMCU ESP32."}),"\n",(0,r.jsx)(e.h2,{id:"instalaci\xf3n-r\xe1pida-usando-esptool",children:"Instalaci\xf3n R\xe1pida Usando Esptool"}),"\n",(0,r.jsxs)(e.p,{children:["Existen varias formas de instalar MicroPython en la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"}),". A continuaci\xf3n, se muestra un m\xe9todo r\xe1pido utilizando ",(0,r.jsx)(e.code,{children:"esptool.py"})," para flashear el firmware en el ESP32 y el firmware UF2 en el RP2040."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Firmware de MicroPython para ESP32"}),(0,r.jsx)(e.br,{}),"\n",(0,r.jsx)(e.a,{href:"https://github.com/UNIT-Electronics-MX/ecosistema-de-desarrollo-unit/releases/download/Micropython_by_uelectronics/micropython_uelectronics_version2025_DualMCU.bin",children:"micropython_uelectronics_version2025_DualMCU.bin"})]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:(0,r.jsx)(e.code,{children:"esptool.py"})})," \u2013 Requerido para flashear el firmware en el ESP32 o ",(0,r.jsx)(e.a,{href:"https://espressif.github.io/esptool-js/",children:"esptools"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Descarga el ",(0,r.jsx)(e.strong,{children:"Firmware MicroPython"})," para el ",(0,r.jsx)(e.strong,{children:"ESP32"})," y ",(0,r.jsx)(e.strong,{children:"RP2040"})," desde la p\xe1gina oficial de MicroPython."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Conecta la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"})," a tu computadora mediante USB."]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["Flashea el firmware para ",(0,r.jsx)(e.strong,{children:"ESP32"})," utilizando el siguiente comando:"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 460800 write_flash -z 0x1000 micropython_uelectronics_version2025_DualMCU.bin\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsxs)(e.li,{children:["Flashea el firmware UF2 para ",(0,r.jsx)(e.strong,{children:"RP2040"})," siguiendo estos pasos:"]}),"\n"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Mant\xe9n presionado el bot\xf3n ",(0,r.jsx)(e.strong,{children:"BOOT"})," en el ",(0,r.jsx)(e.strong,{children:"RP2040"}),"."]}),"\n",(0,r.jsxs)(e.li,{children:["Conecta la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"})," a tu computadora mediante USB."]}),"\n",(0,r.jsxs)(e.li,{children:["Suelta el bot\xf3n ",(0,r.jsx)(e.strong,{children:"BOOT"}),"."]}),"\n",(0,r.jsxs)(e.li,{children:["Arrastra y suelta el archivo del firmware UF2 del ",(0,r.jsx)(e.strong,{children:"RP2040"})," en la unidad correspondiente."]}),"\n"]}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsxs)(e.li,{children:["Una vez flasheado el firmware, la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"})," estar\xe1 lista para ejecutar MicroPython."]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"ejecutando-micropython-terminal-gnulinux",children:"Ejecutando MicroPython Terminal GNU/Linux"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["Abre una ventana de terminal y con\xe9ctate al ",(0,r.jsx)(e.strong,{children:"ESP32"})," utilizando el siguiente comando:"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"picocom /dev/ttyUSB0 -b 115200\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:["Con\xe9ctate al ",(0,r.jsx)(e.strong,{children:"RP2040"})," utilizando el siguiente comando:"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"picocom /dev/ttyACM0 -b 115200\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsx)(e.li,{children:"Ahora puedes ejecutar c\xf3digo Python directamente en la placa utilizando el int\xe9rprete interactivo."}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"instalaci\xf3n-r\xe1pida-uf2",children:"Instalaci\xf3n R\xe1pida UF2"}),"\n",(0,r.jsxs)(e.p,{children:["Otra forma de instalar MicroPython en la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"})," es mediante el uso de un archivo UF2 para el ",(0,r.jsx)(e.strong,{children:"RP2040"}),"."]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Firmware de MicroPython para RP2040"}),(0,r.jsx)(e.br,{}),"\n",(0,r.jsx)(e.a,{href:"https://github.com/UNIT-Electronics-MX/ecosistema-de-desarrollo-unit/releases/download/Micropython_by_uelectronics/Micropython_DualMCU_2025_RP2040.uf2",children:"Micropython_DualMCU_2025_RP2040.uf2"})]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["Conecta la placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"})," a tu computadora mediante USB  presionando el bot\xf3n ",(0,r.jsx)(e.strong,{children:"BOOT"})," en el ",(0,r.jsx)(e.strong,{children:"RP2040"}),". Luego, arrastra y suelta el archivo del firmware UF2 del ",(0,r.jsx)(e.strong,{children:"RP2040"})," en la unidad correspondiente."]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/UNIT-Electronics/DualMCU/refs/heads/main/Docs/RP2040-Boot_button.jpg",alt:"RP2040"})}),"\n",(0,r.jsx)(e.h2,{id:"abrir-y-ejecutar-thonny-ide",children:"Abrir y ejecutar Thonny IDE"}),"\n",(0,r.jsxs)(e.p,{children:["Una vez que hayas instalado MicroPython en tu placa ",(0,r.jsx)(e.strong,{children:"DualMCU-ONE/DualMCU"}),", puedes abrir Thonny IDE y comenzar a programar en Python."]}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Abre Thonny IDE y selecciona el int\xe9rprete de MicroPython para tu placa."}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import machine\nimport time\n\nled_pin = machine.Pin(4, machine.Pin.OUT)\nled_pin2 = machine.Pin(26, machine.Pin.OUT)\nled_pin3 = machine.Pin(25, machine.Pin.OUT)\n\n\ndef loop():\n     while True:\n        led_pin.on()    \n        led_pin2.on()   \n        led_pin3.on()  \n        time.sleep(1)  \n        led_pin.off()   \n        led_pin2.off()  \n        led_pin3.off()  \n        time.sleep(1)   \n\nloop()\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Proyecto en funcionamiento Ejemplo para la placa DualMCU-ONE/DualMCU ESP32"})}),"\n",(0,r.jsx)(e.p,{children:"Una vez que hayas realizado todas las configuraciones y conexiones necesarias, podr\xe1s ver el proyecto en funcionamiento."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/UNIT-Electronics/DualMCU-ESP32-MicroPython/refs/heads/main/img/blink_led2.gif",alt:"LedRGB"})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>s});var a=i(6540);const r={},o=a.createContext(r);function t(n){const e=a.useContext(o);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);